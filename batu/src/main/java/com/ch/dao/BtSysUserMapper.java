package com.ch.dao;

import com.ch.dao.provider.BtSysUserProvider;
import com.ch.entity.BtSysUser;
import com.ch.entity.BtSysUserExample;

import java.util.Date;
import java.util.List;

import com.ch.model.PersonMangeDTO;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Repository;

@Repository
public interface BtSysUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bt_sys_user
     *
     * @mbg.generated Fri Mar 15 09:33:19 CST 2019
     */
    long countByExample(BtSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bt_sys_user
     *
     * @mbg.generated Fri Mar 15 09:33:19 CST 2019
     */
    int deleteByExample(BtSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bt_sys_user
     *
     * @mbg.generated Fri Mar 15 09:33:19 CST 2019
     */
    int insert(BtSysUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bt_sys_user
     *
     * @mbg.generated Fri Mar 15 09:33:19 CST 2019
     */
    int insertSelective(BtSysUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bt_sys_user
     *
     * @mbg.generated Fri Mar 15 09:33:19 CST 2019
     */
    List<BtSysUser> selectByExample(BtSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bt_sys_user
     *
     * @mbg.generated Fri Mar 15 09:33:19 CST 2019
     */
    int updateByExampleSelective(@Param("record") BtSysUser record, @Param("example") BtSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bt_sys_user
     *
     * @mbg.generated Fri Mar 15 09:33:19 CST 2019
     */
    int updateByExample(@Param("record") BtSysUser record, @Param("example") BtSysUserExample example);

    /**
     * 根据用户ID进行查询
     * @param userId
     * @return
     */
    @Select("select * from bt_sys_user where user_id = #{userId}")
    BtSysUser findByUserId(@Param("userId") String userId);

    /**
     * 后台用户列表查询
     * @param userName
     * @param roleId
     * @return
     */
    @SelectProvider(type = BtSysUserProvider.class, method = "getUserList")
    @Results({
            @Result(column = "username", property = "userName", javaType = String.class),
            @Result(column = "phone", property = "phone", javaType = String.class),
            @Result(column = "role_desc", property = "roleName", javaType = String.class),
            @Result(column = "account", property = "account", javaType = String.class),
            @Result(column = "status", property = "status", javaType = Integer.class),
            @Result(column = "update_time", property = "createDate", javaType = String.class),
            @Result(column = "user_id", property = "userId", javaType = String.class)
    })
    List<PersonMangeDTO> btUserList(@Param("userName") String userName, @Param("roleId") String roleId);

    /**
     * 根据ID进行修改
     * @param btSysUser
     * @return
     */
    @Update("update bt_sys_user set username = #{btSysUser.username}, " +
            " phone = #{btSysUser.phone}, account = #{btSysUser.account}, " +
            " password = #{btSysUser.password} where user_id = #{btSysUser.userId}")
    Integer updateBtSysUserByUserId(@Param("btSysUser") BtSysUser btSysUser);


    /**
     * 后台重置密码
     * @param userId
     * @return
     */
    @Update("update bt_sys_user set password = 'admin123' where user_id = #{userId}")
    int resetPassword(@Param("userId") String userId);

    /**
     * 后台修改人员状态
     * @param userId
     * @return
     */
    @Update("update bt_sys_user set password = #{status} where user_id = #{userId}")
    int updateStatus(@Param("userId") String userId, @Param("status") int status);
}